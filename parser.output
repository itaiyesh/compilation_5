State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: %empty

    2 @2: %empty

    3 Program: _global_scope_open $@1 Funcs @2 _global_scope_close

    4 _global_scope_open: %empty

    5 _global_scope_close: %empty

    6 _scope_open: %empty

    7 _scope_close: %empty

    8 Funcs: %empty
    9      | FuncDecl Funcs

   10 $@3: %empty

   11 $@4: %empty

   12 @5: %empty

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 LBRACE Statements RBRACE @5 _scope_close

   14 RetType: Type
   15        | VOID

   16 Formals: %empty
   17        | FormalsList

   18 FormalsList: FormalDecl
   19            | FormalDecl COMMA FormalsList

   20 FormalDecl: Type ID

   21 Statements: Statement
   22           | Statements M_BOOLEAN Statement

   23 marker: IF _scope_open LPAREN Exp

   24 @6: %empty

   25 Statement: LBRACE _scope_open Statements RBRACE @6 _scope_close
   26          | Type ID SC
   27          | Type ID ASSIGN Exp SC
   28          | ID ASSIGN Exp SC
   29          | Call SC
   30          | RETURN SC
   31          | RETURN Exp SC
   32          | BREAK SC

   33 $@7: %empty

   34 @8: %empty

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE SC @8 _scope_close

   36 @9: %empty

   37 Statement: marker RPAREN M_BOOLEAN Statement M_BOOLEAN @9 _scope_close

   38 $@10: %empty

   39 @11: %empty

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN Statement @11 _scope_close

   41 @12: %empty

   42 @13: %empty

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

   44 _switch_open: _scope_open

   45 _while_open: _scope_open

   46 CaseList: CaseList CaseStatement
   47         | CaseStatement

   48 @14: %empty

   49 CaseStatement: CaseDec @14 Statements
   50              | CaseDec

   51 CaseDec: CASE NUM COLON
   52        | CASE NUM B COLON
   53        | DEFAULT COLON

   54 Call: ID LPAREN ExpList RPAREN
   55     | ID LPAREN RPAREN

   56 ExpList: Exp
   57        | Exp COMMA ExpList

   58 Type: INT
   59     | BYTE
   60     | BOOL

   61 Exp: LPAREN Exp RPAREN
   62    | Exp MUL_DIV Exp
   63    | Exp PLUS_MINUS Exp
   64    | ID
   65    | Call
   66    | NUM
   67    | NUM B
   68    | STRING
   69    | TRUE
   70    | FALSE
   71    | NOT Exp
   72    | Exp AND M_BOOLEAN Exp
   73    | Exp OR M_BOOLEAN Exp
   74    | Exp RELOP Exp

   75 M_BOOLEAN: %empty

   76 N_BOOLEAN: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 15
INT (259) 58
BYTE (260) 59
B (261) 52 67
BOOL (262) 60
TRUE (263) 69
FALSE (264) 70
RETURN (265) 30 31
IF (266) 23
ELSE (267) 43
WHILE (268) 40
SWITCH (269) 35
CASE (270) 51 52
BREAK (271) 32
DEFAULT (272) 53
COLON (273) 51 52 53
SC (274) 26 27 28 29 30 31 32 35
COMMA (275) 19 57
LPAREN (276) 13 23 35 40 54 55 61
RPAREN (277) 13 35 37 40 43 54 55 61
LBRACE (278) 13 25 35
RBRACE (279) 13 25 35
ID (280) 13 20 26 27 28 54 55 64
NUM (281) 51 52 66 67
STRING (282) 68
ASSIGN (283) 27 28
OR (284) 73
AND (285) 72
RELOP (286) 74
PLUS_MINUS (287) 63
MUL_DIV (288) 62
NOT (289) 71
LEFT (290)
NO_ELSE (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
Program (38)
    on left: 3, on right: 0
$@1 (39)
    on left: 1, on right: 3
@2 (40)
    on left: 2, on right: 3
_global_scope_open (41)
    on left: 4, on right: 3
_global_scope_close (42)
    on left: 5, on right: 3
_scope_open (43)
    on left: 6, on right: 23 25 43 44 45
_scope_close (44)
    on left: 7, on right: 13 25 35 37 40 43
Funcs (45)
    on left: 8 9, on right: 3 9
FuncDecl (46)
    on left: 13, on right: 9
$@3 (47)
    on left: 10, on right: 13
$@4 (48)
    on left: 11, on right: 13
@5 (49)
    on left: 12, on right: 13
RetType (50)
    on left: 14 15, on right: 13
Formals (51)
    on left: 16 17, on right: 13
FormalsList (52)
    on left: 18 19, on right: 17 19
FormalDecl (53)
    on left: 20, on right: 18 19
Statements (54)
    on left: 21 22, on right: 13 22 25 49
marker (55)
    on left: 23, on right: 37 43
Statement (56)
    on left: 25 26 27 28 29 30 31 32 35 37 40 43, on right: 21 22 37
    40 43
@6 (57)
    on left: 24, on right: 25
$@7 (58)
    on left: 33, on right: 35
@8 (59)
    on left: 34, on right: 35
@9 (60)
    on left: 36, on right: 37
$@10 (61)
    on left: 38, on right: 40
@11 (62)
    on left: 39, on right: 40
@12 (63)
    on left: 41, on right: 43
@13 (64)
    on left: 42, on right: 43
_switch_open (65)
    on left: 44, on right: 35
_while_open (66)
    on left: 45, on right: 40
CaseList (67)
    on left: 46 47, on right: 35 46
CaseStatement (68)
    on left: 49 50, on right: 46 47
@14 (69)
    on left: 48, on right: 49
CaseDec (70)
    on left: 51 52 53, on right: 49 50
Call (71)
    on left: 54 55, on right: 29 65
ExpList (72)
    on left: 56 57, on right: 54 57
Type (73)
    on left: 58 59 60, on right: 14 20 26 27
Exp (74)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74, on right: 23
    27 28 31 35 40 56 57 61 62 63 71 72 73 74
M_BOOLEAN (75)
    on left: 75, on right: 22 37 40 43 72 73
N_BOOLEAN (76)
    on left: 76, on right: 43


State 0

    0 $accept: . Program $end

    $default  reduce using rule 4 (_global_scope_open)

    Program             go to state 1
    _global_scope_open  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    3 Program: _global_scope_open . $@1 Funcs @2 _global_scope_close

    $default  reduce using rule 1 ($@1)

    $@1  go to state 4


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    3 Program: _global_scope_open $@1 . Funcs @2 _global_scope_close

    VOID  shift, and go to state 5
    INT   shift, and go to state 6
    BYTE  shift, and go to state 7
    BOOL  shift, and go to state 8

    $default  reduce using rule 8 (Funcs)

    Funcs     go to state 9
    FuncDecl  go to state 10
    RetType   go to state 11
    Type      go to state 12


State 5

   15 RetType: VOID .

    $default  reduce using rule 15 (RetType)


State 6

   58 Type: INT .

    $default  reduce using rule 58 (Type)


State 7

   59 Type: BYTE .

    $default  reduce using rule 59 (Type)


State 8

   60 Type: BOOL .

    $default  reduce using rule 60 (Type)


State 9

    3 Program: _global_scope_open $@1 Funcs . @2 _global_scope_close

    $default  reduce using rule 2 (@2)

    @2  go to state 13


State 10

    9 Funcs: FuncDecl . Funcs

    VOID  shift, and go to state 5
    INT   shift, and go to state 6
    BYTE  shift, and go to state 7
    BOOL  shift, and go to state 8

    $default  reduce using rule 8 (Funcs)

    Funcs     go to state 14
    FuncDecl  go to state 10
    RetType   go to state 11
    Type      go to state 12


State 11

   13 FuncDecl: RetType . ID LPAREN Formals RPAREN $@3 $@4 LBRACE Statements RBRACE @5 _scope_close

    ID  shift, and go to state 15


State 12

   14 RetType: Type .

    $default  reduce using rule 14 (RetType)


State 13

    3 Program: _global_scope_open $@1 Funcs @2 . _global_scope_close

    $default  reduce using rule 5 (_global_scope_close)

    _global_scope_close  go to state 16


State 14

    9 Funcs: FuncDecl Funcs .

    $default  reduce using rule 9 (Funcs)


State 15

   13 FuncDecl: RetType ID . LPAREN Formals RPAREN $@3 $@4 LBRACE Statements RBRACE @5 _scope_close

    LPAREN  shift, and go to state 17


State 16

    3 Program: _global_scope_open $@1 Funcs @2 _global_scope_close .

    $default  reduce using rule 3 (Program)


State 17

   13 FuncDecl: RetType ID LPAREN . Formals RPAREN $@3 $@4 LBRACE Statements RBRACE @5 _scope_close

    INT   shift, and go to state 6
    BYTE  shift, and go to state 7
    BOOL  shift, and go to state 8

    $default  reduce using rule 16 (Formals)

    Formals      go to state 18
    FormalsList  go to state 19
    FormalDecl   go to state 20
    Type         go to state 21


State 18

   13 FuncDecl: RetType ID LPAREN Formals . RPAREN $@3 $@4 LBRACE Statements RBRACE @5 _scope_close

    RPAREN  shift, and go to state 22


State 19

   17 Formals: FormalsList .

    $default  reduce using rule 17 (Formals)


State 20

   18 FormalsList: FormalDecl .
   19            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 23

    $default  reduce using rule 18 (FormalsList)


State 21

   20 FormalDecl: Type . ID

    ID  shift, and go to state 24


State 22

   13 FuncDecl: RetType ID LPAREN Formals RPAREN . $@3 $@4 LBRACE Statements RBRACE @5 _scope_close

    $default  reduce using rule 10 ($@3)

    $@3  go to state 25


State 23

   19 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 6
    BYTE  shift, and go to state 7
    BOOL  shift, and go to state 8

    FormalsList  go to state 26
    FormalDecl   go to state 20
    Type         go to state 21


State 24

   20 FormalDecl: Type ID .

    $default  reduce using rule 20 (FormalDecl)


State 25

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 . $@4 LBRACE Statements RBRACE @5 _scope_close

    $default  reduce using rule 11 ($@4)

    $@4  go to state 27


State 26

   19 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 19 (FormalsList)


State 27

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 . LBRACE Statements RBRACE @5 _scope_close

    LBRACE  shift, and go to state 28


State 28

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 LBRACE . Statements RBRACE @5 _scope_close

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    Statements  go to state 36
    marker      go to state 37
    Statement   go to state 38
    Call        go to state 39
    Type        go to state 40


State 29

   30 Statement: RETURN . SC
   31          | RETURN . Exp SC

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    SC      shift, and go to state 43
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 50


State 30

   23 marker: IF . _scope_open LPAREN Exp

    $default  reduce using rule 6 (_scope_open)

    _scope_open  go to state 51


State 31

   40 Statement: WHILE . _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN Statement @11 _scope_close

    $default  reduce using rule 6 (_scope_open)

    _scope_open  go to state 52
    _while_open  go to state 53


State 32

   35 Statement: SWITCH . _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE SC @8 _scope_close

    $default  reduce using rule 6 (_scope_open)

    _scope_open   go to state 54
    _switch_open  go to state 55


State 33

   32 Statement: BREAK . SC

    SC  shift, and go to state 56


State 34

   25 Statement: LBRACE . _scope_open Statements RBRACE @6 _scope_close

    $default  reduce using rule 6 (_scope_open)

    _scope_open  go to state 57


State 35

   28 Statement: ID . ASSIGN Exp SC
   54 Call: ID . LPAREN ExpList RPAREN
   55     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 58
    ASSIGN  shift, and go to state 59


State 36

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 LBRACE Statements . RBRACE @5 _scope_close
   22 Statements: Statements . M_BOOLEAN Statement

    RBRACE  shift, and go to state 60

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 61


State 37

   37 Statement: marker . RPAREN M_BOOLEAN Statement M_BOOLEAN @9 _scope_close
   43          | marker . RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    RPAREN  shift, and go to state 62


State 38

   21 Statements: Statement .

    $default  reduce using rule 21 (Statements)


State 39

   29 Statement: Call . SC

    SC  shift, and go to state 63


State 40

   26 Statement: Type . ID SC
   27          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 64


State 41

   69 Exp: TRUE .

    $default  reduce using rule 69 (Exp)


State 42

   70 Exp: FALSE .

    $default  reduce using rule 70 (Exp)


State 43

   30 Statement: RETURN SC .

    $default  reduce using rule 30 (Statement)


State 44

   61 Exp: LPAREN . Exp RPAREN

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 65


State 45

   54 Call: ID . LPAREN ExpList RPAREN
   55     | ID . LPAREN RPAREN
   64 Exp: ID .

    LPAREN  shift, and go to state 58

    $default  reduce using rule 64 (Exp)


State 46

   66 Exp: NUM .
   67    | NUM . B

    B  shift, and go to state 66

    $default  reduce using rule 66 (Exp)


State 47

   68 Exp: STRING .

    $default  reduce using rule 68 (Exp)


State 48

   71 Exp: NOT . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 67


State 49

   65 Exp: Call .

    $default  reduce using rule 65 (Exp)


State 50

   31 Statement: RETURN Exp . SC
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    SC          shift, and go to state 68
    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73


State 51

   23 marker: IF _scope_open . LPAREN Exp

    LPAREN  shift, and go to state 74


State 52

   45 _while_open: _scope_open .

    $default  reduce using rule 45 (_while_open)


State 53

   40 Statement: WHILE _while_open . M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN Statement @11 _scope_close

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 75


State 54

   44 _switch_open: _scope_open .

    $default  reduce using rule 44 (_switch_open)


State 55

   35 Statement: SWITCH _switch_open . LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE SC @8 _scope_close

    LPAREN  shift, and go to state 76


State 56

   32 Statement: BREAK SC .

    $default  reduce using rule 32 (Statement)


State 57

   25 Statement: LBRACE _scope_open . Statements RBRACE @6 _scope_close

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    Statements  go to state 77
    marker      go to state 37
    Statement   go to state 38
    Call        go to state 39
    Type        go to state 40


State 58

   54 Call: ID LPAREN . ExpList RPAREN
   55     | ID LPAREN . RPAREN

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    RPAREN  shift, and go to state 78
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call     go to state 49
    ExpList  go to state 79
    Exp      go to state 80


State 59

   28 Statement: ID ASSIGN . Exp SC

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 81


State 60

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 LBRACE Statements RBRACE . @5 _scope_close

    $default  reduce using rule 12 (@5)

    @5  go to state 82


State 61

   22 Statements: Statements M_BOOLEAN . Statement

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    marker     go to state 37
    Statement  go to state 83
    Call       go to state 39
    Type       go to state 40


State 62

   37 Statement: marker RPAREN . M_BOOLEAN Statement M_BOOLEAN @9 _scope_close
   43          | marker RPAREN . M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 84


State 63

   29 Statement: Call SC .

    $default  reduce using rule 29 (Statement)


State 64

   26 Statement: Type ID . SC
   27          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 85
    ASSIGN  shift, and go to state 86


State 65

   61 Exp: LPAREN Exp . RPAREN
   62    | Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    RPAREN      shift, and go to state 87
    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73


State 66

   67 Exp: NUM B .

    $default  reduce using rule 67 (Exp)


State 67

   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   71    | NOT Exp .
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    $default  reduce using rule 71 (Exp)


State 68

   31 Statement: RETURN Exp SC .

    $default  reduce using rule 31 (Statement)


State 69

   73 Exp: Exp OR . M_BOOLEAN Exp

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 88


State 70

   72 Exp: Exp AND . M_BOOLEAN Exp

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 89


State 71

   74 Exp: Exp RELOP . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 90


State 72

   63 Exp: Exp PLUS_MINUS . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 91


State 73

   62 Exp: Exp MUL_DIV . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 92


State 74

   23 marker: IF _scope_open LPAREN . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 93


State 75

   40 Statement: WHILE _while_open M_BOOLEAN . LPAREN Exp $@10 RPAREN M_BOOLEAN Statement @11 _scope_close

    LPAREN  shift, and go to state 94


State 76

   35 Statement: SWITCH _switch_open LPAREN . Exp $@7 RPAREN LBRACE CaseList RBRACE SC @8 _scope_close

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 95


State 77

   22 Statements: Statements . M_BOOLEAN Statement
   25 Statement: LBRACE _scope_open Statements . RBRACE @6 _scope_close

    RBRACE  shift, and go to state 96

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 61


State 78

   55 Call: ID LPAREN RPAREN .

    $default  reduce using rule 55 (Call)


State 79

   54 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 97


State 80

   56 ExpList: Exp .
   57        | Exp . COMMA ExpList
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    COMMA       shift, and go to state 98
    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    $default  reduce using rule 56 (ExpList)


State 81

   28 Statement: ID ASSIGN Exp . SC
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    SC          shift, and go to state 99
    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73


State 82

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 LBRACE Statements RBRACE @5 . _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 100


State 83

   22 Statements: Statements M_BOOLEAN Statement .

    $default  reduce using rule 22 (Statements)


State 84

   37 Statement: marker RPAREN M_BOOLEAN . Statement M_BOOLEAN @9 _scope_close
   43          | marker RPAREN M_BOOLEAN . Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    marker     go to state 37
    Statement  go to state 101
    Call       go to state 39
    Type       go to state 40


State 85

   26 Statement: Type ID SC .

    $default  reduce using rule 26 (Statement)


State 86

   27 Statement: Type ID ASSIGN . Exp SC

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 102


State 87

   61 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 61 (Exp)


State 88

   73 Exp: Exp OR M_BOOLEAN . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 103


State 89

   72 Exp: Exp AND M_BOOLEAN . Exp

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 104


State 90

   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp
   74    | Exp RELOP Exp .

    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    RELOP  error (nonassociative)

    $default  reduce using rule 74 (Exp)


State 91

   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   63    | Exp PLUS_MINUS Exp .
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    MUL_DIV  shift, and go to state 73

    $default  reduce using rule 63 (Exp)


State 92

   62 Exp: Exp . MUL_DIV Exp
   62    | Exp MUL_DIV Exp .
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    $default  reduce using rule 62 (Exp)


State 93

   23 marker: IF _scope_open LPAREN Exp .
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    $default  reduce using rule 23 (marker)


State 94

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN . Exp $@10 RPAREN M_BOOLEAN Statement @11 _scope_close

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call  go to state 49
    Exp   go to state 105


State 95

   35 Statement: SWITCH _switch_open LPAREN Exp . $@7 RPAREN LBRACE CaseList RBRACE SC @8 _scope_close
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    $default  reduce using rule 33 ($@7)

    $@7  go to state 106


State 96

   25 Statement: LBRACE _scope_open Statements RBRACE . @6 _scope_close

    $default  reduce using rule 24 (@6)

    @6  go to state 107


State 97

   54 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 54 (Call)


State 98

   57 ExpList: Exp COMMA . ExpList

    TRUE    shift, and go to state 41
    FALSE   shift, and go to state 42
    LPAREN  shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46
    STRING  shift, and go to state 47
    NOT     shift, and go to state 48

    Call     go to state 49
    ExpList  go to state 108
    Exp      go to state 80


State 99

   28 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 28 (Statement)


State 100

   13 FuncDecl: RetType ID LPAREN Formals RPAREN $@3 $@4 LBRACE Statements RBRACE @5 _scope_close .

    $default  reduce using rule 13 (FuncDecl)


State 101

   37 Statement: marker RPAREN M_BOOLEAN Statement . M_BOOLEAN @9 _scope_close
   43          | marker RPAREN M_BOOLEAN Statement . ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    ELSE  shift, and go to state 109

    ELSE      [reduce using rule 75 (M_BOOLEAN)]
    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 110


State 102

   27 Statement: Type ID ASSIGN Exp . SC
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    SC          shift, and go to state 111
    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73


State 103

   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   73    | Exp OR M_BOOLEAN Exp .
   74    | Exp . RELOP Exp

    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    $default  reduce using rule 73 (Exp)


State 104

   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   72    | Exp AND M_BOOLEAN Exp .
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    $default  reduce using rule 72 (Exp)


State 105

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp . $@10 RPAREN M_BOOLEAN Statement @11 _scope_close
   62 Exp: Exp . MUL_DIV Exp
   63    | Exp . PLUS_MINUS Exp
   72    | Exp . AND M_BOOLEAN Exp
   73    | Exp . OR M_BOOLEAN Exp
   74    | Exp . RELOP Exp

    OR          shift, and go to state 69
    AND         shift, and go to state 70
    RELOP       shift, and go to state 71
    PLUS_MINUS  shift, and go to state 72
    MUL_DIV     shift, and go to state 73

    $default  reduce using rule 38 ($@10)

    $@10  go to state 112


State 106

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 . RPAREN LBRACE CaseList RBRACE SC @8 _scope_close

    RPAREN  shift, and go to state 113


State 107

   25 Statement: LBRACE _scope_open Statements RBRACE @6 . _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 114


State 108

   57 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 57 (ExpList)


State 109

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE . N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    $default  reduce using rule 76 (N_BOOLEAN)

    N_BOOLEAN  go to state 115


State 110

   37 Statement: marker RPAREN M_BOOLEAN Statement M_BOOLEAN . @9 _scope_close

    $default  reduce using rule 36 (@9)

    @9  go to state 116


State 111

   27 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 27 (Statement)


State 112

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 . RPAREN M_BOOLEAN Statement @11 _scope_close

    RPAREN  shift, and go to state 117


State 113

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN . LBRACE CaseList RBRACE SC @8 _scope_close

    LBRACE  shift, and go to state 118


State 114

   25 Statement: LBRACE _scope_open Statements RBRACE @6 _scope_close .

    $default  reduce using rule 25 (Statement)


State 115

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN . _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 119


State 116

   37 Statement: marker RPAREN M_BOOLEAN Statement M_BOOLEAN @9 . _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 120


State 117

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN . M_BOOLEAN Statement @11 _scope_close

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 121


State 118

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE . CaseList RBRACE SC @8 _scope_close

    CASE     shift, and go to state 122
    DEFAULT  shift, and go to state 123

    CaseList       go to state 124
    CaseStatement  go to state 125
    CaseDec        go to state 126


State 119

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close . M_BOOLEAN _scope_open Statement @12 @13 _scope_close

    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 127


State 120

   37 Statement: marker RPAREN M_BOOLEAN Statement M_BOOLEAN @9 _scope_close .

    $default  reduce using rule 37 (Statement)


State 121

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN . Statement @11 _scope_close

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    marker     go to state 37
    Statement  go to state 128
    Call       go to state 39
    Type       go to state 40


State 122

   51 CaseDec: CASE . NUM COLON
   52        | CASE . NUM B COLON

    NUM  shift, and go to state 129


State 123

   53 CaseDec: DEFAULT . COLON

    COLON  shift, and go to state 130


State 124

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList . RBRACE SC @8 _scope_close
   46 CaseList: CaseList . CaseStatement

    CASE     shift, and go to state 122
    DEFAULT  shift, and go to state 123
    RBRACE   shift, and go to state 131

    CaseStatement  go to state 132
    CaseDec        go to state 126


State 125

   47 CaseList: CaseStatement .

    $default  reduce using rule 47 (CaseList)


State 126

   49 CaseStatement: CaseDec . @14 Statements
   50              | CaseDec .

    CASE      reduce using rule 50 (CaseStatement)
    DEFAULT   reduce using rule 50 (CaseStatement)
    RBRACE    reduce using rule 50 (CaseStatement)
    $default  reduce using rule 48 (@14)

    @14  go to state 133


State 127

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN . _scope_open Statement @12 @13 _scope_close

    $default  reduce using rule 6 (_scope_open)

    _scope_open  go to state 134


State 128

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN Statement . @11 _scope_close

    $default  reduce using rule 39 (@11)

    @11  go to state 135


State 129

   51 CaseDec: CASE NUM . COLON
   52        | CASE NUM . B COLON

    B      shift, and go to state 136
    COLON  shift, and go to state 137


State 130

   53 CaseDec: DEFAULT COLON .

    $default  reduce using rule 53 (CaseDec)


State 131

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE . SC @8 _scope_close

    SC  shift, and go to state 138


State 132

   46 CaseList: CaseList CaseStatement .

    $default  reduce using rule 46 (CaseList)


State 133

   49 CaseStatement: CaseDec @14 . Statements

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    Statements  go to state 139
    marker      go to state 37
    Statement   go to state 38
    Call        go to state 39
    Type        go to state 40


State 134

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open . Statement @12 @13 _scope_close

    INT     shift, and go to state 6
    BYTE    shift, and go to state 7
    BOOL    shift, and go to state 8
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    SWITCH  shift, and go to state 32
    BREAK   shift, and go to state 33
    LBRACE  shift, and go to state 34
    ID      shift, and go to state 35

    marker     go to state 37
    Statement  go to state 140
    Call       go to state 39
    Type       go to state 40


State 135

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN Statement @11 . _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 141


State 136

   52 CaseDec: CASE NUM B . COLON

    COLON  shift, and go to state 142


State 137

   51 CaseDec: CASE NUM COLON .

    $default  reduce using rule 51 (CaseDec)


State 138

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE SC . @8 _scope_close

    $default  reduce using rule 34 (@8)

    @8  go to state 143


State 139

   22 Statements: Statements . M_BOOLEAN Statement
   49 CaseStatement: CaseDec @14 Statements .

    CASE      reduce using rule 49 (CaseStatement)
    DEFAULT   reduce using rule 49 (CaseStatement)
    RBRACE    reduce using rule 49 (CaseStatement)
    $default  reduce using rule 75 (M_BOOLEAN)

    M_BOOLEAN  go to state 61


State 140

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement . @12 @13 _scope_close

    $default  reduce using rule 41 (@12)

    @12  go to state 144


State 141

   40 Statement: WHILE _while_open M_BOOLEAN LPAREN Exp $@10 RPAREN M_BOOLEAN Statement @11 _scope_close .

    $default  reduce using rule 40 (Statement)


State 142

   52 CaseDec: CASE NUM B COLON .

    $default  reduce using rule 52 (CaseDec)


State 143

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE SC @8 . _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 145


State 144

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 . @13 _scope_close

    $default  reduce using rule 42 (@13)

    @13  go to state 146


State 145

   35 Statement: SWITCH _switch_open LPAREN Exp $@7 RPAREN LBRACE CaseList RBRACE SC @8 _scope_close .

    $default  reduce using rule 35 (Statement)


State 146

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 . _scope_close

    $default  reduce using rule 7 (_scope_close)

    _scope_close  go to state 147


State 147

   43 Statement: marker RPAREN M_BOOLEAN Statement ELSE N_BOOLEAN _scope_close M_BOOLEAN _scope_open Statement @12 @13 _scope_close .

    $default  reduce using rule 43 (Statement)
